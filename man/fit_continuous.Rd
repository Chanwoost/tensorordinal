% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mainfunctions.R
\name{fit_continuous}
\alias{fit_continuous}
\title{Fit a tensor using Tucker model}
\usage{
fit_continuous(ttnsr,C,A_1,A_2,A_3,alpha = TRUE)
}
\arguments{
\item{ttnsr}{an observed tensor data}

\item{C}{an initial point for a core tensor}

\item{A_1, A_2, A_3}{initial points for factor matrices}

\item{alpha}{a max-norm constraint of a tensor

\code{alpha = TRUE} if there is no constraint for max-norm of a latent tensor parameter}
}
\value{
a list containing the following:

\code{C} - an estimated core tensor

\code{A_1, A_2, A_3} - estimated factor matrices

\code{iteration} - the number of iterations

\code{cost} - evaluations of cost functions at each iterations
}
\description{
Fitting e a tensor with possibly missing values using Tucker model
}
\examples{
# draw random ordinal tensor
indices = c(10,10,10)
rank = c(3,3,3)
otensor <- array(sample(c(1,2,3),prod(indices),replace = TRUE),dim = indices)

#Initial points for `fit_continuous' function
A_1 = pracma::randortho(indices[1])[,1:rank[1]]
A_2 = pracma::randortho(indices[2])[,1:rank[2]]
A_3 = pracma::randortho(indices[3])[,1:rank[3]]
C = rTensor::rand_tensor(modes = rank)

#Tucker decomposition
Tucker_est = fit_continuous(otensor,C,A_1,A_2,A_3,alpha = 100)
}
